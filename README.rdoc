* ruby 1.9.3p327 (2012-11-10 revision 37606) [x86_64-darwin11.4.2]
* Rails 4.0.0.beta1

They symptom is that when you iterate over a large (e.g. 1000) batch of ActiveRecord model objects and access a datetime
field (e.g. created_at), the access time increases exponentially, as opposed to linearly for strings and numbers.  This
is a very simple test case intended to illustrate the symptom.

Note: the symptom exists using both postgres and mysql, but not sqlite.

Here is the output we see when we run our rspec:

    "count: 10"
    "num: 0.00010900000000000002"
    "str: 6.8e-05"
    "dt: 0.0009299999999999999"
    "---------------------------"
    "count: 100"
    "num: 0.0010300000000000014"
    "str: 0.0007189999999999996"
    "dt: 0.024139999999999995"
    "---------------------------"
    "count: 1000"
    "num: 0.011447999999999984"
    "str: 0.007193000000000051"
    "dt: 2.1040229999999998"
    "---------------------------"
    "count: 2000"
    "num: 0.0248910000000003"
    "str: 0.014854999999999985"
    "dt: 8.606204999999994"
    "---------------------------"

Note that when you go from 100 objects to 1000, numbers and strings use about 10x as much total time to retrieve the
fields, but the datetime increases by closer to 100x.  And when you go from 1000 to 2000, numbers and strings are
about 2x, but datetimes are 4x.
